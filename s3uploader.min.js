class S3Uploader{constructor(){this._handleTotalProgress=this.throttle(this._handleTotalProgress.bind(this),160)}async init(t){if(this.files=[],this.pack=[],this.uploaded=[],this.skipped=[],this.failed=[],this.listeners={},this.filesUploadProgressData=[],this.done=0,this.totalSize=0,this.accumulatedSize=0,this.options=t,this.options.maxWidth||(this.options.maxWidth=4e3),this.options.maxHeight||(this.options.maxHeight=4e3),this.options.maxPicFileSize||(this.options.maxPicFileSize=6999e3),this.options.maxVidFileSize||(this.options.maxVidFileSize=9999e3),this.options.addS3inputs){if(!this.options.credentialsEndPoint)throw new Error("Missing credential endpoint");try{var e=await this._getFormInputs();this.options.formInputs=e.inputsValues,this.options.formInputs.url=decodeURIComponent(e.formUrl),this.options.formInputs.tenantDir=e.directory,this.options.directory=[e.directory]}catch(t){throw new Error(t)}}else{if(!this.options.uploadUrl)throw new Error("Missing upload URL (uploadUrl)");this.options.formInputs={url:decodeURIComponent(this.options.uploadUrl)},this.options.prefix&&(this.options.directory=[this.options.prefix])}}addFile(t){this.files.push(t)}addEventListener(t,e){this.listeners[t]||(this.listeners[t]=[]),this.listeners[t].push(e)}removeEventListener(t,e){this.listeners[t]&&(this.listeners[t]=this.listeners[t].filter(t=>t!==e))}async start_upload(){this._dispatchEvent("upload_start",this.files.length);for(var[t,e]of this.files.entries()){e=await this._processFile(e);"object"==typeof e&&this.pack.push(e),this._dispatchEvent("pre-process",{file:e,processed:t,total:this.files.length})}this._manageTransfers()}async _processFile(e){try{if(!this._checkFileSize(e)){var i={message:"file size too large",size:e.size,name:e.name};return this.skipped.push(i),this._dispatchEvent("skip-file",i),this._reportDone(),!1}let t=await this._getFileInfo(e);var s=this._rename(e.name),a=await this._fixImageSize(e);return t.size=a.size,this.accumulatedSize+=a.size,{oldFileName:e.name,fileSize:a.size,fileType:e.type,newFileName:s,metadata:t,fixed_file:a}}catch(t){return this._dispatchEvent("error",t),!1}}async _manageTransfers(){var t=navigator.hardwareConcurrency||4;let i=this.pack,s=[];for(var a=0,o=0;0<i.length||0<s.length;){for(;0<i.length&&s.length<t;){var r=i.shift();s.push({id:a,prom:this._transferFile(r)}),a++}let e=await Promise.race(s);if(s=s.filter(t=>t.id!=e.id),o>=this.files.length+30)return;o++}}async _transferFile(t){var e=await this._doXHRupload(t),e={metadata:t.metadata,location:e.location,size:e.size};this._dispatchEvent("completion",e),this.uploaded.push(e),this._reportDone()}async _doXHRupload(r){return new Promise((i,s)=>{let a=new XMLHttpRequest,t=new FormData;t.append("key",r.newFileName),t.append("Content-Type",r.fileType),t.append("acl","public-read"),t.append("success_action_status",201),this.options.addS3inputs&&(t.append("policy",this.options.formInputs.policy),t.append("X-amz-credential",this.options.formInputs["X-amz-credential"]),t.append("X-amz-algorithm",this.options.formInputs["X-amz-algorithm"]),t.append("X-amz-date",this.options.formInputs["X-amz-date"]),t.append("X-amz-signature",this.options.formInputs["X-amz-signature"]),t.append("Expires",this.options.formInputs.Expires),t.append("CacheControl",this.options.formInputs.CacheControl)),t.append("file",r.fixed_file),a.open("POST",this.options.formInputs.url);let e={size:r.fileSize,uploaded:0,totalSize:0};this.filesUploadProgressData.push(e);let o=0;a.upload.onprogress=t=>{t.lengthComputable&&(e.uploaded=t.loaded,e.totalSize=t.total,o=t.total,this._handleTotalProgress())},a.onreadystatechange=()=>{if(4===a.readyState)if(201===a.status){let t=(new window.DOMParser).parseFromString(a.response,"text/xml");var e=t.documentElement.childNodes[0].textContent.replace(/%2F/g,"/");i({location:e,size:o})}else this.failed.push({message:a.response,size:r.fileSize,name:r.oldFileName}),this._dispatchEvent("error",a.response),s(a.response)},a.onerror=t=>{this.failed.push({message:t,size:r.fileSize,name:r.oldFileName}),s(t)},a.send(t)})}async _getFileInfo(t){let e;return t.type.startsWith("image/")?e=await this._extractMetadata(t):t.type.startsWith("video/")&&(e=await this._extractVideoInfo(t)),e}async _fixImageSize(i){if(i.type.startsWith("image/")){var s=await this._createImage(i),{width:a,height:o}=s;if(a>this.options.maxWidth||o>this.options.maxHeight){let t=document.createElement("canvas"),e=t.getContext("2d");e.imageSmoothingEnabled=!0,e.imageSmoothingQuality="high";var r=this._resolveSize(a,o);t.width=r.width,t.height=r.height,e.drawImage(s,0,0,a,o,0,0,t.width,t.height),i=this._dataURItoBlob(t.toDataURL("image/jpeg")),t=null}}return i}async _createImage(s){return new Promise((t,e)=>{let i=new Image;i.onload=()=>{t(i)},i.onerror=t=>{e(t)},i.src=URL.createObjectURL(s)})}async _getFormInputs(){let t=await fetch(this.options.credentialsEndPoint,{method:"post",mode:"same-origin",headers:{"Content-Type":"application/json;charset=UTF-8","X-Requested-With":"XMLHttpRequest"},body:JSON.stringify({method:"getUploadFormInputs"})});return await t.json()}_handleTotalProgress(){let e=0,i=0;this.filesUploadProgressData.forEach(t=>{i+=t.totalSize,e+=t.uploaded}),this.totalSize=i,this._dispatchEvent("total-progress",{progress:Math.floor(e/this.accumulatedSize*100),totalFiles:this.files.length,uploaded:this.done})}_reportDone(){this.done++,this.done>=this.files.length&&this._dispatchEvent("upload-done",{uploaded:this.uploaded.length,totalSize:this.totalSize,uploadedFiles:this.uploaded,skipped:this.skipped,failed:this.failed})}_dataURItoBlob(t){let e=atob(t.split(",")[1]);var i=t.split(",")[0].split(":")[1].split(";")[0],t=new ArrayBuffer(e.length);let s=new Uint8Array(t);for(let t=0;t<e.length;t++)s[t]=e.charCodeAt(t);return new Blob([t],{type:i})}_rename(t){var e=this._fixFileName(t);let i=this.options.directory;t=Date.now();return`${i.length?i.join("/")+"/":""}${t}_${e}`}_fixFileName(t){let e,i="jpg",s=t.split(".");return e=1<s.length?(i=s.pop().toLowerCase().slice(0,4),4<i.length&&(i="jpg"),s.join()):t,e=e.replace(/[^\w\- ]+/g,"").trim().replace(/\s+/g,"-").replace(/-+/g,"-").replace(/^[-_]+|[-_]+$/g,""),e.length<3&&(e+="pic_"+(Math.random()+1).toString(36).substring(4,10)),`${e}.${i}`}_checkFileSize(t){return t.type.startsWith("image/")?t.size<this.options.maxPicFileSize:!!t.type.startsWith("video/")&&t.size<this.options.maxVidFileSize}_resolveSize(t,e){let i=t,s=e;e=i/s;return t>this.options.maxWidth&&(i=this.options.maxWidth,s=Math.floor(i/e)),s>this.options.maxHeight&&(s=this.options.maxHeight,i=Math.floor(s*e)),{width:i,height:s}}_dispatchEvent(t,e){this.listeners[t]&&this.listeners[t].forEach(t=>t(e))}_extractMetadata(i){var o=this;return new Promise((a,e)=>{var t=new FileReader;t.onload=function(e){var i={};try{let t=ExifReader.load(e.target.result);delete t.MakerNote,i={city:t.City?.description,country:t.Country?.description??t.State?.description,natWidth:t.ImageWidth?.description,natHeight:t.ImageLength?.description,description:t.ImageDescription?.description??t["Caption/Abstract"]?.description??t.description?.description,keywords:t.subject?.description??t.Keywords?.map(t=>t.description)?.join(",")}}catch(t){console.log("Error parsing EXIF/XMP data: ",t)}var t=new Image;let s=window.URL||window.webkitURL;e=new Blob([e.target.result],{type:"image/jpeg"});t.src=s.createObjectURL(e),t.onload=function(){var t=o._resolveSize(this.width,this.height);i.width=t.width,i.height=t.height,a(i)}},t.onerror=function(t){e({status:"fail",message:t})},t.readAsArrayBuffer(i)})}_extractVideoInfo(o){return new Promise((s,t)=>{const a=document.createElement("video");a.preload="metadata",a.src=URL.createObjectURL(o),a.onloadedmetadata=()=>{window.URL.revokeObjectURL(a.src);var t=a.videoWidth,e=a.videoHeight,i=a.duration;s({width:t,height:e,size:o.size,duration:i})},a.onerror=t})}throttle(t,e){var i=!1;return function(){i||(t.call(),i=!0,setTimeout(function(){i=!1},e))}}}
